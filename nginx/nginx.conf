#定义Nginx运行的用户和用户组
##user nginx;
user nginx nginx;

#nginx进程数，建议设置为等于CPU总核心数。
worker_processes auto;

#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]
#error_log logs/error.log;
#error_log logs/error.log notice;
#error_log logs/error.log info;
error_log logs/error.log warn;

#进程文件
pid logs/nginx.pid;

#一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（系统的值ulimit -n）与nginx进程数相除，但是nginx分配请求并不均匀，所以建议与ulimit -n的值保持一致。
worker_rlimit_nofile 655335;

#工作模式与连接数上限
events {
 #参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型是Linux 2.6以上版本内核中的高性能网络I/O模型，如果跑在FreeBSD上面，就用kqueue模型。
 use epoll;
 #单个进程最大连接数（最大连接数=连接数*进程数）
 worker_connections 51200;
 multi_accept on;
}

#设定http服务器
http {
    include mime.types;
    default_type application/octet-stream;
	
 #服务器名字的hash表大小
 server_names_hash_bucket_size 128; 
    
 #上传文件大小限制
    client_header_buffer_size 32k; 

 #设定请求缓
 large_client_header_buffers 4 64k;
   
 #设定请求缓
 client_max_body_size 8m; 
 #开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，
 #如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。
 #注意：如果图片显示不正常把这个改成off。
 sendfile on;
      
 #开启目录列表访问，合适下载服务器，默认关闭。
 autoindex off; 
         
 tcp_nopush on; #防止网络阻塞
 tcp_nodelay on; #防止网络阻塞
           
 #长连接超时时间，单位是秒
 keepalive_timeout 65;
 #日志格式设定 
 log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
	
 #FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。
 fastcgi_connect_timeout 500;
 fastcgi_send_timeout 500;
 fastcgi_read_timeout 500;
 fastcgi_buffer_size 128k;
 fastcgi_buffers 4 128k;
 fastcgi_busy_buffers_size 128k;
 fastcgi_temp_file_write_size 256k;

#keepalive_timeout 0;
	
 #gzip模块设置
 gzip on; #开启gzip压缩输出
 gzip_min_length 1k; #最小压缩文件大小
 gzip_buffers 4 16k; #压缩缓冲区
 gzip_http_version 1.1; #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）
 gzip_comp_level 2; #压缩等级
 gzip_types text/plain application/x-javascript text/css application/xml image;
 #压缩类型，默认就已经包含text/html，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。
	
 gzip_vary on;
 #limit_zone crawler $binary_remote_addr 10m; #开启限制IP连接数的时候需要使用

server
        {
        listen 80 default_server;
	listen       [::]:80 default_server;
        server_name svnet.cn;
	if ($server_port = 80 ) {
	return 301 https://$server_name$request_uri;
	}
	if ($scheme = http ) {
	return 301 https://$server_name$request_uri;
	}
	error_page 497 https://$server_name$request_uri;
	}
server
        {
        listen 443 ssl;
        listen       [::]:443 ssl;
        server_name svnet.cn www.svnet.cn;
        root /home/wwwraat;
        charset utf-8,gbk;

        ssl_certificate /usr/local/nginx/ssl/svnet.crt;
        ssl_certificate_key /usr/local/nginx/ssl/svnet.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5";
        ssl_session_cache builtin:1000 shared:SSL:10m;

        location ~ ^(.*)/$ {
            charset utf-8;
            autoindex on;
            autoindex_localtime on;
            autoindex_exact_size off;
            add_after_body /.autoindex.html;
        }
}
server
        {
        listen 80;
        listen       [::]:80;
        server_name aixan.cn wap.svnet.cn www.svnet.cn;
        if ($server_port = 80 ) {
        return 301 https://$server_name$request_uri;
        }
        if ($scheme = http ) {
        return 301 https://$server_name$request_uri;
        }
        error_page 497 https://$server_name$request_uri;
        }

server
        {
        listen 443 ssl;
	listen       [::]:443 ssl;
        server_name aixan.cn wap.aixan.cn www.aixan.cn;
        index index.html index.htm index.php default.html default.htm default.php;
        root /home/wwwroot;
  
        ssl_certificate /usr/local/nginx/ssl/aixan.crt;
        ssl_certificate_key /usr/local/nginx/ssl/aixan.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5";
        ssl_session_cache builtin:1000 shared:SSL:10m;
	location / {
		try_files $uri $uri/ /index.php?$args;
	}
	rewrite /wp-admin$ $scheme://$host$uri/ permanent;
        location ~ \.php$ {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            
            include fastcgi_params;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PHP_VALUE open_basedir=$document_root:/tmp/:/proc/;
        }

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
        {
            expires 30d;
        }

        location ~ .*\.(js|css)?$
        {
            expires 12h;
        }

        location ~ /.well-known {
            allow all;
        }

        location ~ /\.
        {
            deny all;
        }

        access_log logs/aixan.log;
 }
include /usr/local/nginx/conf/conf.d/*.conf;
}
